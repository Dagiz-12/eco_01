# Generated by Django 5.2.1 on 2025-10-25 17:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0002_initial'),
        ('products', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='template name')),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], default='email', max_length=20, verbose_name='template type')),
                ('category', models.CharField(choices=[('order', 'Order Updates'), ('shipping', 'Shipping Updates'), ('payment', 'Payment Updates'), ('inventory', 'Inventory Alerts'), ('marketing', 'Marketing'), ('system', 'System Notifications')], max_length=20, verbose_name='category')),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='email subject')),
                ('subject_template', models.TextField(blank=True, help_text='Jinja2 template for dynamic subjects', verbose_name='subject template')),
                ('body_template', models.TextField(help_text='Jinja2 template for notification body', verbose_name='body template')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('variables_help', models.TextField(blank=True, help_text='Documentation for available template variables', verbose_name='variables help')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'notification template',
                'verbose_name_plural': 'notification templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('message', models.TextField(verbose_name='message')),
                ('notification_type', models.CharField(choices=[('order', 'Order Updates'), ('shipping', 'Shipping Updates'), ('payment', 'Payment Updates'), ('inventory', 'Inventory Alerts'), ('marketing', 'Marketing'), ('system', 'System Notifications')], max_length=20, verbose_name='notification type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered'), ('read', 'Read')], default='pending', max_length=20, verbose_name='status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='priority')),
                ('email_sent', models.BooleanField(default=False, verbose_name='email sent')),
                ('push_sent', models.BooleanField(default=False, verbose_name='push sent')),
                ('sms_sent', models.BooleanField(default=False, verbose_name='sms sent')),
                ('context_data', models.JSONField(blank=True, help_text='Additional context data for the notification', null=True, verbose_name='context data')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='scheduled for')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='orders.order')),
                ('related_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient', models.EmailField(max_length=254, verbose_name='recipient')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('body', models.TextField(verbose_name='body')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='sent at')),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed')], max_length=20, verbose_name='status')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('message_id', models.CharField(blank=True, help_text='Email service message ID', max_length=200, verbose_name='message ID')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'email log',
                'verbose_name_plural': 'email logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_order_updates', models.BooleanField(default=True, verbose_name='order updates email')),
                ('email_shipping_updates', models.BooleanField(default=True, verbose_name='shipping updates email')),
                ('email_payment_updates', models.BooleanField(default=True, verbose_name='payment updates email')),
                ('email_inventory_alerts', models.BooleanField(default=False, verbose_name='inventory alerts email')),
                ('email_marketing', models.BooleanField(default=False, verbose_name='marketing emails')),
                ('push_order_updates', models.BooleanField(default=True, verbose_name='order updates push')),
                ('push_promotions', models.BooleanField(default=False, verbose_name='promotions push')),
                ('sms_order_updates', models.BooleanField(default=False, verbose_name='order updates sms')),
                ('sms_shipping_updates', models.BooleanField(default=False, verbose_name='shipping updates sms')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user notification preference',
                'verbose_name_plural': 'user notification preferences',
            },
        ),
        migrations.CreateModel(
            name='InventoryAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('threshold', models.PositiveIntegerField(help_text='Alert when stock falls below this number', verbose_name='threshold')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('notified_at', models.DateTimeField(blank=True, null=True, verbose_name='notified at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_alerts', to='products.product')),
            ],
            options={
                'verbose_name': 'inventory alert',
                'verbose_name_plural': 'inventory alerts',
                'unique_together': {('product', 'threshold')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status', 'created_at'], name='notificatio_user_id_cd4f27_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status', 'scheduled_for'], name='notificatio_status_d8d933_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_f2e0f7_idx'),
        ),
    ]
