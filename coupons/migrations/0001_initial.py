# Generated by Django 5.2.1 on 2025-10-25 18:20

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0002_initial'),
        ('products', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(help_text='Unique coupon code that customers enter', max_length=50, unique=True, verbose_name='coupon code')),
                ('name', models.CharField(max_length=100, verbose_name='coupon name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('shipping', 'Free Shipping')], default='percentage', max_length=20, verbose_name='discount type')),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Percentage or fixed amount based on discount type', max_digits=10, verbose_name='discount value')),
                ('applies_to', models.CharField(choices=[('all', 'All Products'), ('categories', 'Specific Categories'), ('products', 'Specific Products')], default='all', max_length=20, verbose_name='applies to')),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='minimum order amount')),
                ('maximum_discount_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum discount for percentage coupons', max_digits=10, null=True, verbose_name='maximum discount amount')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this coupon can be used', null=True, verbose_name='usage limit')),
                ('usage_limit_per_user', models.PositiveIntegerField(blank=True, help_text='Maximum uses per customer', null=True, verbose_name='usage limit per user')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='used count')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='valid from')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='valid until')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this coupon is publicly visible', verbose_name='is public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('categories', models.ManyToManyField(blank=True, related_name='coupons', to='products.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_coupons', to=settings.AUTH_USER_MODEL)),
                ('products', models.ManyToManyField(blank=True, related_name='coupons', to='products.product')),
            ],
            options={
                'verbose_name': 'coupon',
                'verbose_name_plural': 'coupons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CouponRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rule_type', models.CharField(choices=[('first_order', 'First Order Only'), ('specific_customer', 'Specific Customers'), ('product_combination', 'Product Combination')], max_length=30, verbose_name='rule type')),
                ('configuration', models.JSONField(blank=True, help_text='JSON configuration for the rule', null=True, verbose_name='configuration')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='coupons.coupon')),
            ],
            options={
                'verbose_name': 'coupon rule',
                'verbose_name_plural': 'coupon rules',
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='discount amount')),
                ('used_at', models.DateTimeField(auto_now_add=True, verbose_name='used at')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='coupons.coupon')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to='orders.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'coupon usage',
                'verbose_name_plural': 'coupon usages',
                'ordering': ['-used_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerCoupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='assigned at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('is_used', models.BooleanField(default=False, verbose_name='is used')),
                ('used_at', models.DateTimeField(blank=True, null=True, verbose_name='used at')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_coupons_to_users', to=settings.AUTH_USER_MODEL)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_assignments', to='coupons.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_coupons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer coupon',
                'verbose_name_plural': 'customer coupons',
            },
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code', 'is_active'], name='coupons_cou_code_1aa9c7_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['valid_from', 'valid_until'], name='coupons_cou_valid_f_ac5256_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['is_active', 'is_public'], name='coupons_cou_is_acti_e2f007_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='couponusage',
            unique_together={('coupon', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='customercoupon',
            unique_together={('coupon', 'user')},
        ),
    ]
